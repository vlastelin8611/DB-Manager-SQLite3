#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º TEXT –ø–æ–ª—è
"""

import sys
import os
import tkinter as tk
from tkinter import messagebox

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_field_creation():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—è —Å —Ç–∏–ø–æ–º TEXT"""
    
    print("üß™ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—è —Å —Ç–∏–ø–æ–º TEXT")
    print("=" * 50)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        import db_manager
        import dialogs
        import sqlite3
        import tempfile
        
        print("‚úÖ –ú–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ë–î
        temp_db = tempfile.mktemp(suffix='.db')
        conn = sqlite3.connect(temp_db)
        print(f"‚úÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è –ë–î —Å–æ–∑–¥–∞–Ω–∞: {temp_db}")
        
        # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        root = tk.Tk()
        root.withdraw()  # –°–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        
        print("üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º CreateTableDialog...")
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
        dialog = dialogs.CreateTableDialog(root, conn)
        
        print("‚úÖ CreateTableDialog —Å–æ–∑–¥–∞–Ω")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è TEXT
        print("üîß –°–∏–º—É–ª–∏—Ä—É–µ–º FieldDialog...")
        
        # –ú–æ–∫–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç FieldDialog
        class MockFieldDialog:
            def __init__(self, parent):
                self.result = ("test_field", "TEXT", False, "", False)
                print(f"üìù –ú–æ–∫ FieldDialog —Å–æ–∑–¥–∞–Ω —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º: {self.result}")
        
        # –ó–∞–º–µ–Ω—è–µ–º FieldDialog –Ω–∞ –º–æ–∫
        original_field_dialog = dialogs.FieldDialog
        dialogs.FieldDialog = MockFieldDialog
        
        print("üîß –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ —á–µ—Ä–µ–∑ add_field()...")
        
        try:
            # –í—ã–∑—ã–≤–∞–µ–º add_field
            dialog.add_field()
            print("‚úÖ add_field() –≤—ã–ø–æ–ª–Ω–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–µ—Ä–µ–≤–∞
            children = dialog.fields_tree.get_children()
            print(f"üìä –ü–æ–ª–µ–π –≤ –¥–µ—Ä–µ–≤–µ: {len(children)}")
            
            if children:
                for i, child in enumerate(children):
                    item_data = dialog.fields_tree.item(child)
                    print(f"–ü–æ–ª–µ {i+1}: text='{item_data['text']}', values={item_data['values']}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—è
                    if item_data['values'] and len(item_data['values']) > 0:
                        field_type = item_data['values'][0]
                        print(f"üéØ –¢–∏–ø –ø–æ–ª—è: '{field_type}' (–æ–∂–∏–¥–∞–ª—Å—è TEXT)")
                        
                        if field_type == "TEXT":
                            print("‚úÖ –¢–∏–ø –ø–æ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω!")
                        else:
                            print(f"‚ùå –ü–†–û–ë–õ–ï–ú–ê: –æ–∂–∏–¥–∞–ª—Å—è TEXT, –ø–æ–ª—É—á–µ–Ω {field_type}")
            else:
                print("‚ùå –ü–æ–ª—è –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –¥–µ—Ä–µ–≤–æ")
                
        finally:
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π FieldDialog
            dialogs.FieldDialog = original_field_dialog
            
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
        dialog.dialog.destroy()
        root.destroy()
        conn.close()
        
        print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
        log_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'logs')
        if os.path.exists(log_dir):
            log_files = [f for f in os.listdir(log_dir) if f.endswith('.log')]
            if log_files:
                latest_log = os.path.join(log_dir, sorted(log_files)[-1])
                print(f"\nüìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥ —Ñ–∞–π–ª –¥–ª—è –¥–µ—Ç–∞–ª–µ–π: {latest_log}")
        
        os.unlink(temp_db)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {str(e)}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_field_creation()
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")