#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ GUI
"""

import sqlite3
import tempfile
import os

def test_sql_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ SQL –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª–µ–π"""
    
    print("üîß –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è SQL –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª–µ–π...")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –æ–Ω–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç –∏–∑ –¥–∏–∞–ª–æ–≥–∞
    test_fields = [
        # (field_name, field_type, allow_null, default, is_pk)
        ('id', 'INTEGER', 'NO', '', 'YES'),
        ('name', 'TEXT', 'NO', '', 'NO'),
        ('description', 'TEXT', 'YES', '', 'NO'),
        ('age', 'INTEGER', 'YES', '18', 'NO'),
        ('price', 'REAL', 'NO', '0.0', 'NO')
    ]
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É —Å–æ–∑–¥–∞–Ω–∏—è SQL –∫–∞–∫ –≤ dialogs.py
    fields = []
    primary_keys = []
    table_name = 'test_table'
    
    for field_name, field_type, allow_null, default, is_pk in test_fields:
        print(f"\n–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª–µ: {field_name}")
        print(f"  –¢–∏–ø –∏–∑ –¥–∞–Ω–Ω—ã—Ö: {field_type}")
        
        field_def = f'"{field_name}" {field_type.upper()}'
        print(f"  –ë–∞–∑–æ–≤–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {field_def}")
        
        if is_pk == 'YES':
            primary_keys.append(field_name)
            if field_type.upper() == 'INTEGER':
                field_def += " PRIMARY KEY AUTOINCREMENT"
            else:
                field_def += " PRIMARY KEY"
        
        if allow_null == 'NO' and is_pk != 'YES':
            field_def += " NOT NULL"
            
        if default and default.strip() and default.strip().upper() != 'NULL':
            if field_type.upper() in ['TEXT', 'BLOB']:
                field_def += f" DEFAULT '{default.strip()}'"
            else:
                field_def += f" DEFAULT {default.strip()}"
                
        fields.append(field_def)
        print(f"  –§–∏–Ω–∞–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {field_def}")
    
    sql = f'CREATE TABLE "{table_name}" ({", ".join(fields)})'
    print(f"\nüìù –ü–æ–ª–Ω—ã–π SQL:")
    print(sql)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å SQL
    try:
        conn = sqlite3.connect(':memory:')
        cursor = conn.cursor()
        cursor.execute(sql)
        print("\n‚úÖ SQL –≤–∞–ª–∏–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        cursor.execute(f'PRAGMA table_info("{table_name}")')
        columns = cursor.fetchall()
        
        print(f"\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã:")
        for col in columns:
            cid, name, col_type, notnull, default, pk = col
            print(f"  {name}: {col_type} (NOT NULL: {bool(notnull)}, PK: {bool(pk)}, Default: {default})")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ SQL: {str(e)}")
        return False

def test_combobox_behavior():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ Combobox"""
    
    print("\nüéõÔ∏è  –¢–µ—Å—Ç –ø–æ–≤–µ–¥–µ–Ω–∏—è Combobox...")
    
    try:
        import tkinter as tk
        from tkinter import ttk
        
        root = tk.Tk()
        root.withdraw()  # –°–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ
        
        # –°–æ–∑–¥–∞–µ–º Combobox –∫–∞–∫ –≤ –¥–∏–∞–ª–æ–≥–µ
        type_var = tk.StringVar(value="TEXT")
        combo = ttk.Combobox(None, textvariable=type_var,
                           values=["TEXT", "INTEGER", "REAL", "BLOB", "NUMERIC"],
                           state="readonly")
        
        print(f"  –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: '{type_var.get()}'")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—ã–±–æ—Ä —Ä–∞–∑–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
        for test_type in ["TEXT", "INTEGER", "REAL"]:
            type_var.set(test_type)
            result = type_var.get()
            print(f"  –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω {test_type}, –ø–æ–ª—É—á–µ–Ω: '{result}'")
            if result != test_type:
                print(f"    ‚ùå –ü–†–û–ë–õ–ï–ú–ê: –æ–∂–∏–¥–∞–ª—Å—è {test_type}, –ø–æ–ª—É—á–µ–Ω {result}")
        
        root.destroy()
        print("  ‚úÖ Combobox —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ Combobox: {str(e)}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("=" * 60)
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° –¢–ò–ü–ê–ú–ò –î–ê–ù–ù–´–•")
    print("=" * 60)
    
    sql_ok = test_sql_creation()
    combo_ok = test_combobox_behavior()
    
    print("\n" + "=" * 60)
    print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:")
    print(f"{'‚úÖ' if sql_ok else '‚ùå'} –°–æ–∑–¥–∞–Ω–∏–µ SQL: {'OK' if sql_ok else '–ü–†–û–ë–õ–ï–ú–ê'}")
    print(f"{'‚úÖ' if combo_ok else '‚ùå'} Combobox: {'OK' if combo_ok else '–ü–†–û–ë–õ–ï–ú–ê'}")
    
    if sql_ok and combo_ok:
        print("\nü§î –õ–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è SQL –∏ Combobox —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        print("   –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ø–µ—Ä–µ–¥–∞—á–µ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –¥–∏–∞–ª–æ–≥–∞–º–∏.")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ debug_field_types.py –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏.")
    else:
        print("\n‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –±–∞–∑–æ–≤–æ–π –ª–æ–≥–∏–∫–µ.")
    
    print("=" * 60)

if __name__ == "__main__":
    main()
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")